/**
 * Generated by orval v7.0.1 üç∫
 * Do not edit manually.
 * e621 API
 * An API for accessing user information and other resources on e621 and e926.
 * OpenAPI spec version: 1.0.0
 */
import type { PostVersionRating } from "./postVersionRating";

/**
 * A version of a post, representing changes made to the post.
 */
export interface PostVersion {
  /** An array of locked tags added in this version */
  added_locked_tags?: string[];
  /** An array of tags added in this version */
  added_tags?: string[];
  /** The description of the post version */
  description: string;
  /** Whether the description was changed in this version */
  description_changed?: boolean;
  /** The unique ID of the post version */
  id: number;
  /**
   * The locked tags associated with the post version
   * @nullable
   */
  locked_tags?: string | null;
  /**
   * Obsolete tags added in this version
   * @nullable
   */
  obsolete_added_tags?: string | null;
  /**
   * Obsolete tags removed in this version
   * @nullable
   */
  obsolete_removed_tags?: string | null;
  /** Whether the parent ID was changed in this version */
  parent_changed?: boolean;
  /**
   * The ID of the parent post, if applicable
   * @nullable
   */
  parent_id: number | null;
  /** The ID of the associated post */
  post_id: number;
  /** The rating of the post (e.g., safe, questionable, explicit) */
  rating: PostVersionRating;
  /** Whether the rating was changed in this version */
  rating_changed?: boolean;
  /**
   * The reason for the update, if applicable
   * @nullable
   */
  reason?: string | null;
  /** An array of locked tags removed in this version */
  removed_locked_tags?: string[];
  /** An array of tags removed in this version */
  removed_tags?: string[];
  /** The source URL associated with the post version */
  source: string;
  /** Whether the source was changed in this version */
  source_changed?: boolean;
  /** The tags associated with the post version */
  tags: string;
  /** The tags that remained unchanged in this version */
  unchanged_tags?: string;
  /** The timestamp when the post version was updated */
  updated_at: Date;
  /** The ID of the user who updated the post */
  updater_id: number;
  /** The username of the user who updated the post version */
  updater_name: string;
  /** The version number of the post */
  version: number;
}
