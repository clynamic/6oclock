{
  "openapi": "3.0.0",
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "login",
        "summary": "Login",
        "description": "Login with username and api key",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCredentials" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Token",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        },
        "tags": ["Auth"]
      }
    },
    "/auth/validate": {
      "post": {
        "operationId": "validateToken",
        "summary": "Validate token",
        "description": "Validate JWT token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TokenValidation" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Whether the token is valid",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          }
        },
        "tags": ["Auth"]
      }
    },
    "/auth/is-admin": {
      "get": {
        "operationId": "isAdmin",
        "summary": "Check if the current user is admin",
        "description": "Check if the current user is admin",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          },
          "201": {
            "description": "Whether the user is admin",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          }
        },
        "tags": ["Auth"],
        "security": [{ "bearer": [] }]
      }
    },
    "/health": {
      "get": {
        "operationId": "healthCheck",
        "summary": "Health Check",
        "description": "Check the health of the application",
        "parameters": [],
        "responses": { "200": { "description": "The application is healthy" } },
        "tags": ["Health"]
      }
    },
    "/health/manifests": {
      "get": {
        "operationId": "getManifestHealth",
        "summary": "Retrieve manifest health",
        "description": "Retrieve manifest health",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Manifest health",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ManifestHealth" }
                }
              }
            }
          }
        },
        "tags": ["Health"],
        "security": [{ "bearer": [] }]
      }
    },
    "/dashboard/{type}": {
      "get": {
        "operationId": "getDashboard",
        "summary": "Get dashboard",
        "description": "Get dashboard by type, for the current user",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard object",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DashboardConfig" }
              }
            }
          },
          "404": { "description": "Dashboard not found" }
        },
        "tags": ["Dashboard"],
        "security": [{ "bearer": [] }]
      },
      "post": {
        "operationId": "updateDashboard",
        "summary": "Update dashboard",
        "description": "Update dashboard by type, for the current user",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DashboardUpdate" }
            }
          }
        },
        "responses": {
          "200": { "description": "Updated dashboard object" },
          "201": { "description": "" }
        },
        "tags": ["Dashboard"],
        "security": [{ "bearer": [] }]
      }
    },
    "/manifests/{id}": {
      "get": {
        "operationId": "getManifest",
        "summary": "Get a manifest by ID",
        "description": "Get a manifest by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Manifest",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Manifest" }
              }
            }
          }
        },
        "tags": ["Manifest"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "deleteManifest",
        "summary": "Delete a manifest by ID",
        "description": "Delete a manifest by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": { "description": "Manifest deleted successfully" }
        },
        "tags": ["Manifest"],
        "security": [{ "bearer": [] }]
      }
    },
    "/manifests": {
      "get": {
        "operationId": "listManifests",
        "summary": "List manifests",
        "description": "List manifests",
        "parameters": [
          {
            "required": true,
            "name": "startDate",
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "required": true,
            "name": "endDate",
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "required": true,
            "name": "timezone",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "name": "id",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "approvals",
                  "tickets",
                  "posts",
                  "users",
                  "user_profiles",
                  "flags"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of manifests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Manifest" }
                }
              }
            }
          }
        },
        "tags": ["Manifest"],
        "security": [{ "bearer": [] }]
      }
    },
    "/approvals/metrics/count/summary": {
      "get": {
        "operationId": "getApprovalCountSummary",
        "summary": "Approval count summary",
        "description": "Get total approval counts for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalCountSummary"
                }
              }
            }
          }
        },
        "tags": ["Approvals"],
        "security": [{ "bearer": [] }]
      }
    },
    "/approvals/metrics/count/series": {
      "get": {
        "operationId": "getApprovalCountSeries",
        "summary": "Approval count series",
        "description": "Get a time series of approval counts for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ApprovalCountPoint" }
                }
              }
            }
          }
        },
        "tags": ["Approvals"],
        "security": [{ "bearer": [] }]
      }
    },
    "/approvals/metrics/count/series/{approverId}": {
      "get": {
        "operationId": "getApprovalCountSeriesByApprover",
        "summary": "Approval count series by approver",
        "description": "Get a time series of approval counts for a given date range by approver",
        "parameters": [
          {
            "name": "approverId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ApprovalCountPoint" }
                }
              }
            }
          }
        },
        "tags": ["Approvals"],
        "security": [{ "bearer": [] }]
      }
    },
    "/approvals/metrics/approver/summary": {
      "get": {
        "operationId": "getApproverSummary",
        "summary": "Approver summary",
        "description": "Get a summary of the top 20 approvers by approval count for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": { "minimum": 1, "default": 1, "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "minimum": 1,
              "maximum": 320,
              "default": 80,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ApproverSummary" }
                }
              }
            }
          }
        },
        "tags": ["Approvals"],
        "security": [{ "bearer": [] }]
      }
    },
    "/users/head/{id}": {
      "get": {
        "operationId": "getUserHead",
        "summary": "Get user head",
        "description": "Get user head by user id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserHead" }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/status/summary": {
      "get": {
        "operationId": "getTicketStatusSummary",
        "summary": "Ticket status summary",
        "description": "Get ticket status (pending, approved, partial) counts for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TicketStatusSummary" }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/type/summary": {
      "get": {
        "operationId": "getTicketTypeSummary",
        "summary": "Ticket type summary",
        "description": "Get ticket types counts for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TicketTypeSummary" }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/type/summary/handler/{claimantId}": {
      "get": {
        "operationId": "getTicketTypeSummaryForHandler",
        "summary": "Ticket type summary for a handler",
        "description": "Get ticket types counts for a given date range for a specific handler",
        "parameters": [
          {
            "name": "claimantId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TicketTypeSummary" }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/open/series": {
      "get": {
        "operationId": "getTicketOpenSeries",
        "summary": "Ticket open series",
        "description": "Get a time series of open tickets for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TicketOpenPoint" }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/created/series": {
      "get": {
        "operationId": "getTicketCreatedSeries",
        "summary": "Ticket created series",
        "description": "Get a time series of created tickets for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TicketCreatedPoint" }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/created/series/{repoterId}": {
      "get": {
        "operationId": "getTicketCreatedSeriesForReporter",
        "summary": "Ticket created series for a reporter",
        "description": "Get a time series of created tickets for a given date range for a specific reporter",
        "parameters": [
          {
            "name": "repoterId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TicketCreatedPoint" }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/closed/series": {
      "get": {
        "operationId": "getTicketClosedSeries",
        "summary": "Ticket closed series",
        "description": "Get a time series of closed tickets for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TicketClosedPoint" }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/closed/series/{handlerId}": {
      "get": {
        "operationId": "getTicketClosedSeriesForHandler",
        "summary": "Ticket closed series for a handler",
        "description": "Get a time series of closed tickets for a given date range for a specific handler",
        "parameters": [
          {
            "name": "handlerId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TicketClosedPoint" }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/activity/summary": {
      "get": {
        "operationId": "getTicketActivitySummary",
        "summary": "Ticket activity summary",
        "description": "Get a summary of ticket activity per hour for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketActivityPoint"
                  }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/activity/summary/handler/{claimantId}": {
      "get": {
        "operationId": "getTicketActivitySummaryForHandler",
        "summary": "Ticket activity summary for a handler",
        "description": "Get a summary of ticket activity per hour for a given date range for a specific handler",
        "parameters": [
          {
            "name": "claimantId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketActivityPoint"
                  }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/age/series": {
      "get": {
        "operationId": "getTicketAgeSeries",
        "summary": "Ticket age series",
        "description": "Get a time series of ticket ages for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketAgeSeriesPoint"
                  }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/age/summary": {
      "get": {
        "operationId": "getTicketAgeSummary",
        "summary": "Ticket age summary",
        "description": "Get a summary of ticket ages for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TicketAgeSummary" }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/handler/summary": {
      "get": {
        "operationId": "getHandlerSummary",
        "summary": "Handler summary",
        "description": "Get a summary of the top 20 ticket handlers (claimed and handled tickets) for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": { "minimum": 1, "default": 1, "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "minimum": 1,
              "maximum": 320,
              "default": 80,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketHandlerSummary"
                  }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/tickets/metrics/reporter/summary": {
      "get": {
        "operationId": "getReporterSummary",
        "summary": "Reporter summary",
        "description": "Get a summary of the top 20 reporters (submitted tickets) for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": { "minimum": 1, "default": 1, "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "minimum": 1,
              "maximum": 320,
              "default": 80,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketReporterSummary"
                  }
                }
              }
            }
          }
        },
        "tags": ["Tickets"],
        "security": [{ "bearer": [] }]
      }
    },
    "/flags/metric/deletion/series": {
      "get": {
        "operationId": "getDeletionSeries",
        "summary": "Post deletion series",
        "description": "Get a time series of post deletion counts for a given date range",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PostDeletedPoint" }
                }
              }
            }
          }
        },
        "tags": ["Flags"],
        "security": [{ "bearer": [] }]
      }
    },
    "/flags/metric/deletion/series/{userId}": {
      "get": {
        "operationId": "getDeletionSeriesByUser",
        "summary": "Post deletion series by user",
        "description": "Get a time series of post deletion counts for a given date range by user",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": { "format": "date-time", "type": "string" }
          },
          {
            "name": "timezone",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PostDeletedPoint" }
                }
              }
            }
          }
        },
        "tags": ["Flags"],
        "security": [{ "bearer": [] }]
      }
    }
  },
  "info": {
    "title": "5-thirty",
    "description": "backend data aggregate for 6 o'clock",
    "version": "0.0.2",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "UserCredentials": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "minLength": 1 },
          "password": { "type": "string", "pattern": "/^[a-zA-Z0-9]{24,32}$/" }
        },
        "required": ["username", "password"]
      },
      "TokenValidation": {
        "type": "object",
        "properties": { "token": { "type": "string" } },
        "required": ["token"]
      },
      "IdGap": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "nextId": { "type": "number" },
          "gap": { "type": "number" }
        },
        "required": ["id", "nextId", "gap"]
      },
      "ManifestHealth": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "type": {
            "type": "string",
            "enum": [
              "approvals",
              "tickets",
              "posts",
              "users",
              "user_profiles",
              "flags"
            ]
          },
          "startDate": { "format": "date-time", "type": "string" },
          "endDate": { "format": "date-time", "type": "string" },
          "coverage": { "type": "number" },
          "condition": {
            "type": "string",
            "enum": ["nominal", "degraded", "abnormal"]
          },
          "gaps": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/IdGap" }
          }
        },
        "required": [
          "id",
          "type",
          "startDate",
          "endDate",
          "coverage",
          "condition",
          "gaps"
        ]
      },
      "DashboardPosition": {
        "type": "object",
        "properties": {
          "i": { "type": "string" },
          "x": { "type": "number" },
          "y": { "type": "number" },
          "w": { "type": "number" },
          "h": { "type": "number" }
        },
        "required": ["i", "x", "y", "w", "h"]
      },
      "DashboardPositions": {
        "type": "object",
        "properties": {
          "xs": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DashboardPosition" }
          },
          "sm": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DashboardPosition" }
          },
          "md": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DashboardPosition" }
          },
          "lg": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DashboardPosition" }
          },
          "xl": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DashboardPosition" }
          }
        }
      },
      "DashboardConfig": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["moderator", "janitor"] },
          "userId": { "type": "number" },
          "positions": { "$ref": "#/components/schemas/DashboardPositions" },
          "meta": { "type": "object" }
        },
        "required": ["type", "userId", "positions", "meta"]
      },
      "DashboardUpdate": {
        "type": "object",
        "properties": {
          "positions": { "$ref": "#/components/schemas/DashboardPositions" },
          "meta": { "type": "object" }
        }
      },
      "Manifest": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "startDate": { "format": "date-time", "type": "string" },
          "endDate": { "format": "date-time", "type": "string" },
          "type": {
            "enum": [
              "approvals",
              "tickets",
              "posts",
              "users",
              "user_profiles",
              "flags"
            ],
            "type": "string"
          },
          "lowerId": { "type": "number" },
          "upperId": { "type": "number" }
        },
        "required": ["id", "startDate", "endDate", "type", "lowerId", "upperId"]
      },
      "ApprovalCountSummary": {
        "type": "object",
        "properties": { "total": { "type": "number" } },
        "required": ["total"]
      },
      "ApprovalCountPoint": {
        "type": "object",
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["date", "count"]
      },
      "UserHead": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "avatar": { "type": "string" },
          "level": { "type": "string" }
        },
        "required": ["id", "name", "level"]
      },
      "ApproverSummary": {
        "type": "object",
        "properties": {
          "userId": { "type": "number" },
          "head": { "$ref": "#/components/schemas/UserHead" },
          "total": { "type": "number" },
          "position": { "type": "number" },
          "days": { "type": "number" }
        },
        "required": ["userId", "total", "position", "days"]
      },
      "TicketStatusSummary": {
        "type": "object",
        "properties": {
          "pending": { "type": "number" },
          "approved": { "type": "number" },
          "partial": { "type": "number" }
        },
        "required": ["pending", "approved", "partial"]
      },
      "TicketTypeSummary": {
        "type": "object",
        "properties": {
          "user": { "type": "number" },
          "comment": { "type": "number" },
          "forum": { "type": "number" },
          "blip": { "type": "number" },
          "wiki": { "type": "number" },
          "pool": { "type": "number" },
          "set": { "type": "number" },
          "post": { "type": "number" },
          "dmail": { "type": "number" }
        },
        "required": [
          "user",
          "comment",
          "forum",
          "blip",
          "wiki",
          "pool",
          "set",
          "post",
          "dmail"
        ]
      },
      "TicketOpenPoint": {
        "type": "object",
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["date", "count"]
      },
      "TicketCreatedPoint": {
        "type": "object",
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["date", "count"]
      },
      "TicketClosedPoint": {
        "type": "object",
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["date", "count"]
      },
      "TicketActivityPoint": {
        "type": "object",
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["date", "count"]
      },
      "TicketAgeGroup": {
        "type": "object",
        "properties": {
          "oneDay": { "type": "number" },
          "threeDays": { "type": "number" },
          "oneWeek": { "type": "number" },
          "twoWeeks": { "type": "number" },
          "oneMonth": { "type": "number" },
          "aboveOneMonth": { "type": "number" }
        },
        "required": [
          "oneDay",
          "threeDays",
          "oneWeek",
          "twoWeeks",
          "oneMonth",
          "aboveOneMonth"
        ]
      },
      "TicketAgeSeriesPoint": {
        "type": "object",
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "groups": { "$ref": "#/components/schemas/TicketAgeGroup" }
        },
        "required": ["date", "groups"]
      },
      "TicketAgeSummary": {
        "type": "object",
        "properties": {
          "groups": { "$ref": "#/components/schemas/TicketAgeGroup" }
        },
        "required": ["groups"]
      },
      "TicketHandlerSummary": {
        "type": "object",
        "properties": {
          "userId": { "type": "number" },
          "head": { "$ref": "#/components/schemas/UserHead" },
          "total": { "type": "number" },
          "position": { "type": "number" },
          "days": { "type": "number" }
        },
        "required": ["userId", "total", "position", "days"]
      },
      "TicketReporterSummary": {
        "type": "object",
        "properties": {
          "userId": { "type": "number" },
          "head": { "$ref": "#/components/schemas/UserHead" },
          "total": { "type": "number" },
          "days": { "type": "number" }
        },
        "required": ["userId", "total", "days"]
      },
      "PostDeletedPoint": {
        "type": "object",
        "properties": {
          "date": { "format": "date-time", "type": "string" },
          "count": { "type": "number" }
        },
        "required": ["date", "count"]
      }
    }
  },
  "externalDocs": { "description": "/swagger.json", "url": "/swagger.json" }
}
